@page "/Person"
@inject IPersonService PersonService

<div class="col-md-12">
    <p>
        <div class="row">
            <div class="col-md-6 text-left">
                <NavLink class="btn btn-secondary" href="@("/")">Back</NavLink>
            </div>
             <div class="col-md-6 text-right">
                <NavLink class="btn btn-secondary" href="@("/Person/Create")">Create New Person</NavLink>
            </div>
        </div>
    </p>
</div>

<h3>People</h3>

<hr />

<div>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">View</th>
                <th scope="col">Edit</th>
                <th scope="col">Rank</th>
                <th scope="col">Last Name</th>
                <th scope="col">First Name</th>
                <th scope="col">MI</th>
                <th scope="col">Gender</th>
                <th scope="col">Active</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in People)
            {
                <tr>
                    <td><NavLink href="@($"/Person/Detail/id={person.Id}")"><span class="oi oi-person"></span></NavLink></td>
                    <td><NavLink href="@($"/Person/Edit/id={person.Id}")"><span class="oi oi-pencil"></span></NavLink></td>
                    <td>@person.Rank</td>
                    <td>@person.LastName</td>
                    <td>@person.FirstName</td>
                    <td>@person.MiddleInitial</td>
                    <td>@person.Gender</td>
                    <td>@person.IsActive</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    public IEnumerable<PersonModel> People { get; set; } = new List<PersonModel>();

    protected override async Task OnInitializedAsync()
    {
        People = await PersonService.GetPeople();
    }
}
